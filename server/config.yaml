system:
  env: local
  addr: 8888
  db-type: mysql # 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
  oss-type: local #在 server/utils/upload/upload.go 中 NewOss函数配置
  use-redis: false # 使用redis
  use-mongo: false # 使用mongo
  use-multipoint: false # 多点登录拦截
  iplimit-count: 15000 # IP限制次数 一个小时15000次
  iplimit-time: 3600 #  IP限制一个小时
  router-prefix: "/api" #  路由全局前缀
  use-strict-auth: false #  严格角色模式 打开后权限将会存在上下级关系

db-list:
  - disable: true # 是否禁用
    type: "mysql" # 数据库的类型,目前支持mysql、pgsql、mssql、oracle
    alias-name: "ss_test" # 数据库的名称,注意: alias-name 需要在db-list中唯一
    path: "10.188.179.27"
    port: "3306"
    config: "charset=utf8&parseTime=True"
    db-name: "ss_test"
    username: "root"
    password: "jVUjHfgyJmx#9"
    max-idle-conns: 10
    max-open-conns: 100
    log-mode: ""
    log-zap: false
mysql:
  path: "10.188.179.27"
  port: "3306"
  config: "charset=utf8&parseTime=True"
  db-name: "ss_test"
  username: "root"
  password: "jVUjHfgyJmx#9"
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: "" # 开启Gorm全局日志等级 "silent"、"error"、"warn"、"info" 不填默认info 填入silent可以关闭控制台日志
  log-zap: false # 是否写入zap
  #dsn: "root:jVUjHfgyJmx#9@tcp(10.188.179.27:3306)/ss_test?charset=utf8&parseTime=True"
pgsql:
  path: ""
  port: ""
  config: ""
  db-name: ""
  username: ""
  password: ""
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

redis:
  useCluster: false #是否使用redis集群模式
  addr: 10.188.179.110:30380 #使用redis集群模式 addr 无效
  password:
  db: 0
  # clusterAddrs:
  #   - "10.188.179.110:30381"
  #   - "10.188.179.110:30382"
  #   - "10.188.179.110:30383"

mongo:
  coll: ""
  options: ""
  database: ""
  username: ""
  password: ""
  auth-source: ""
  min-pool-size: 0
  max-pool-size: 100
  socket-timeout-ms: 0
  connect-timeout-ms: 0
  is-zap: false
  hosts:
    - hosts: ""
      port: ""

local:
  path: uploads/file
  store-path: uploads/file

aliyun-oss:
  endpoint: yourEndpoint
  access-key-id: yourAccessKeyId
  access-key-secret: yourAccessKeySecret
  bucket-name: yourBucketName
  bucket-url: yourBucketUrl
  base-path: yourBasePath

cors:
  mode: strict-whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: Content-Type,AccessToken,X-CSRF-Token, Authorization, Token,X-Token,X-User-Id
      allow-methods: POST, GET
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

zap:
  level: info
  format: console
  prefix: "[github.com/flipped-aurora/gin-vue-admin/server]"
  director: log
  show-line: true
  encode-level: LowercaseColorLevelEncoder
  stacktrace-key: stacktrace
  log-in-console: true
  retention-day: -1
